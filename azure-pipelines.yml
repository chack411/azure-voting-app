# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'e5dfba4b-ae79-4de3-8f34-85ab3a5b2c45'
  imageRepository: 'azurevotefront'
  containerRegistry: 'akirainaks.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'akirainaks64f5-auth'

  azureSubscriptionEndpoint: Edtter(bd5c9737-10a5-4178-9b83-fd223f7b4bb4)

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:

- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:

    - task: DockerCompose@0
      displayName: Container registry login
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: $(azureSubscriptionEndpoint)
        azureContainerRegistry: $(containerRegistry)
        dockerComposeFile: '**/docker-compose.yaml'
        action: 'Run a Docker Compose command'

    # - task: DockerCompose@0
    #   inputs:
    #     containerregistrytype: 'Azure Container Registry'
    #     azureSubscription: 'Edtter(bd5c9737-10a5-4178-9b83-fd223f7b4bb4)'
    #     azureContainerRegistry: '{"loginServer":"akirainaks.azurecr.io", "id" : "/subscriptions/bd5c9737-10a5-4178-9b83-fd223f7b4bb4/resourceGroups/akirainAKS-rg2/providers/Microsoft.ContainerRegistry/registries/akirainaks"}'
    #     dockerComposeFile: '**/docker-compose.yaml'
    #     action: 'Build services'
    # - task: DockerCompose@0
    #   inputs:
    #     containerregistrytype: 'Azure Container Registry'
    #     azureSubscription: 'Edtter(bd5c9737-10a5-4178-9b83-fd223f7b4bb4)'
    #     azureContainerRegistry: '{"loginServer":"akirainaks.azurecr.io", "id" : "/subscriptions/bd5c9737-10a5-4178-9b83-fd223f7b4bb4/resourceGroups/akirainAKS-rg2/providers/Microsoft.ContainerRegistry/registries/akirainaks"}'
    #     dockerComposeFile: '**/docker-compose.yml'
    #     action: 'Push services'
#     - task: Docker@2
#       displayName: Build and push an image to container registry
#       inputs:
#         command: buildAndPush
#         repository: $(imageRepository)
#         dockerfile: $(dockerfilePath)
#         containerRegistry: $(dockerRegistryServiceConnection)
#         tags: |
#           $(tag)
          
    - upload: manifests
      artifact: manifests

# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: Build
#   jobs:
#   - deployment: Deploy
#     displayName: Deploy
#     pool:
#       vmImage: $(vmImageName)
#     environment: 'chack411azurevotingapp.default'
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - task: KubernetesManifest@0
#             displayName: Create imagePullSecret
#             inputs:
#               action: createSecret
#               secretName: $(imagePullSecret)
#               dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
              
#           - task: KubernetesManifest@0
#             displayName: Deploy to Kubernetes cluster
#             inputs:
#               action: deploy
#               manifests: |
#                 $(Pipeline.Workspace)/manifests/deployment.yml
#                 $(Pipeline.Workspace)/manifests/service.yml
#               imagePullSecrets: |
#                 $(imagePullSecret)
#               containers: |
#                 $(containerRegistry)/$(imageRepository):$(tag)
